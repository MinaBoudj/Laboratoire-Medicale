from django.db import models
from django.db.models.fields import DateField


# Create your models here.
class coproparasitologie(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Resultat = models.CharField(max_length=200)
    Macroscopie = models.CharField(max_length=200)
    Microscopie = models.CharField(max_length=200)
    Etat_frais = models.CharField(max_length=200)
    Ritchie = models.CharField(max_length=200)
    Kato_willis = models.CharField(max_length=200)
    Scotch_test = models.CharField(max_length=200)
    Autres = models.CharField(max_length=200)


class bactériologie(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Reference = models.CharField(max_length=200)
    Cytologie = models.CharField(max_length=200)
    Culture = models.CharField(max_length=200)


class groupageSanguin(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Groupe = models.CharField(max_length=200)
    Rh = models.CharField(max_length=200)


class Entérocoque(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Ampi_amo = models.CharField(max_length=200)
    Getamicine = models.CharField(max_length=200)
    Strepto = models.CharField(max_length=200)
    Erythromicine = models.CharField(max_length=200)
    Furanes = models.CharField(max_length=200)
    Tetracy = models.CharField(max_length=200)
    Vancomicine = models.CharField(max_length=200)
    Tricoplanine = models.CharField(max_length=200)
    Ciprofloxacine = models.CharField(max_length=200)
    Rifampicine = models.CharField(max_length=200)
    Fosfomycine = models.CharField(max_length=200)
    Chloram = models.CharField(max_length=200)
    Tigecycline = models.CharField(max_length=200)
    Praticien = models.CharField(max_length=200)


class Pseudomonas(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Titracine = models.CharField(max_length=20)
    Piperacilline = models.CharField(max_length=20)
    Ticar_Acide = models.CharField(max_length=20)
    Ceftazidime = models.CharField(max_length=20)
    Aztreonam = models.CharField(max_length=20)
    Imipéneme = models.CharField(max_length=20)
    Amikacine = models.CharField(max_length=20)
    Gentamicine = models.CharField(max_length=20)
    Cipro = models.CharField(max_length=20)
    Lévofloxacine = models.CharField(max_length=20)
    Fosfomycine = models.CharField(max_length=20)
    Colistine = models.CharField(max_length=20)
    Praticien = models.CharField(max_length=20)


class FNS(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    GB = models.FloatField()
    GR = models.FloatField()
    Hb = models.FloatField()
    VGM = models.FloatField()
    Hte = models.FloatField()
    TCMH = models.FloatField()
    CCMH = models.FloatField()
    Ptte = models.PositiveIntegerField()


class Entérobactéries(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Fosfomycine = models.CharField(max_length=20)
    Acide_nalid = models.CharField(max_length=20)
    Trime_sulfam = models.CharField(max_length=20)
    Ciprofloxacine = models.CharField(max_length=20)
    Furanes = models.CharField(max_length=20)
    Chloram = models.CharField(max_length=20)
    Colistine = models.CharField(max_length=20)
    Getamicine = models.CharField(max_length=20)
    Amikacine = models.CharField(max_length=20)
    Ertapéneme = models.CharField(max_length=20)
    Imipéneme = models.CharField(max_length=20)
    Céfrazidime = models.CharField(max_length=20)
    Aztréonam = models.CharField(max_length=20)
    Cefo_Ceftria = models.CharField(max_length=20)
    Cefoxitine = models.CharField(max_length=20)
    Cefazoline = models.CharField(max_length=20)
    Amoxi_Acide = models.CharField(max_length=20)
    Ampi_amo = models.CharField(max_length=20)
    Praticien = models.CharField(max_length=20)


class Stapylocoque(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Penicilline = models.CharField(max_length=20)
    Oxacilline = models.CharField(max_length=20)
    Cefoxitine = models.CharField(max_length=20)
    Amikacine = models.CharField(max_length=20)
    Gentamicine = models.CharField(max_length=20)
    Kanamycine = models.CharField(max_length=20)
    Eryth_Azith = models.CharField(max_length=20)
    Clind_linc = models.CharField(max_length=20)
    Prist_Quin_dal = models.CharField(max_length=20)
    Ofloxacine = models.CharField(max_length=20)
    Ciprofloxacine = models.CharField(max_length=20)
    Lévofloxacine = models.CharField(max_length=20)
    Chloram = models.CharField(max_length=20)
    Vancomycine = models.CharField(max_length=20)
    Rifampicine = models.CharField(max_length=20)
    Trime_sulfam = models.CharField(max_length=20)
    Tetracy_doxy = models.CharField(max_length=20)
    Acidefucidique = models.CharField(max_length=20)


class Acinetobacter(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Ticarcilline = models.CharField(max_length=20)
    Piperacilline = models.CharField(max_length=20)
    Ticar_Acide = models.CharField(max_length=20)
    Ceftazidime = models.CharField(max_length=20)
    Imipéneme = models.CharField(max_length=20)
    Amikacine = models.CharField(max_length=20)
    Gentamicine = models.CharField(max_length=20)
    Tobramycine = models.CharField(max_length=20)
    Netilmicine = models.CharField(max_length=20)
    Ciprof = models.CharField(max_length=20)
    Lévofloxamine = models.CharField(max_length=20)
    Tetracy_doxy = models.CharField(max_length=20)
    Trime_sulfam = models.CharField(max_length=20)
    Colistine = models.CharField(max_length=20)
    Praticie = models.CharField(max_length=20)


class BilanDurgence(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Taux_pro = models.FloatField()
    INR = models.FloatField()
    Temp_cépha = models.FloatField()
    Glucose = models.FloatField()
    Urée = models.FloatField()
    créatinine = models.FloatField()
    Bilirubine = models.FloatField()
    Calcium = models.FloatField()
    CRP = models.FloatField()
    WBC = models.FloatField()
    RBC = models.FloatField()
    HGB = models.FloatField()
    HCT = models.FloatField()
    MCV = models.FloatField()
    MCH = models.FloatField()
    MCHC = models.FloatField()
    PLT = models.FloatField()
    LYM = models.FloatField()
    NEUT = models.FloatField()


class BiochimieGénérale(models.Model):
    id_demande = models.PositiveIntegerField(unique=True)
    date_ajout_resultat = models.DateTimeField(auto_now_add=True)
    Glucose = models.FloatField()
    Urée = models.FloatField()
    Créatinine = models.FloatField()
    Acide_Urique = models.FloatField()
    Sodium = models.FloatField()
    Potassium = models.FloatField()
    Clicium_total = models.FloatField()
    Calcium_ionisé = models.FloatField()
    Phosphore = models.FloatField()
    Magnésium = models.FloatField()
    Fer = models.FloatField()
    aspect_résum = models.FloatField()
    Cholestérol_total = models.FloatField()
    Triglycérides = models.FloatField()
    HDL = models.FloatField()
    LDL = models.FloatField()
    Protéines = models.FloatField()
    Albumine = models.FloatField()
    Amylase = models.FloatField()
    Lipase = models.FloatField()
    CK_total = models.FloatField()
    CK_Mb = models.FloatField()
    LDH = models.FloatField()
    GOT = models.FloatField()
    GPT = models.FloatField()
    PAL = models.FloatField()
    y_gt = models.FloatField()
    Bilirubine = models.FloatField()
    Praticien = models.CharField(max_length=20)
